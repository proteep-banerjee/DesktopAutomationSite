<?xml version="1.0" encoding="UTF-8" standalone="no"?>


<project basedir="." default="run">
	<basename property="ant.project.name" file="${basedir}" />
	<property environment="env" />
	<property value="${env.COMMON_RESOURCES}" name="Common_Resources" />
	<!--<property value="/Users/Ankit/workspace/Common_Resources" name="Common_Resources" /> !-->
	<property name="classes.dir" value="build" />
	<property name="report.dir" value="test-output" />
	<property name="logs.dir" value="logs" />
	<property name="browser" value="${Common_Resources}/ChromeVersions/Chrome40/chrome.exe" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="testng.output.dir" value="testng_output" />
	<property name="target" value="1.7" />
	<property name="source" value="1.7" />

	<path id="fab.classpath">
		<pathelement location="build" />
		<pathelement location="${Common_Resources}/jars/commons-lang-2.4.jar" />
		<pathelement location="${Common_Resources}/jars/commons-lang3-3.0.1.jar" />
		<pathelement location="${Common_Resources}/jars/commons-validator-1.5.1.jar" />
		<pathelement location="${Common_Resources}/jars/poi-3.8-beta5-20111217.jar" />
		<pathelement location="${Common_Resources}/jars/selenium-server-standalone-2.53.0.jar" />
		<pathelement location="${Common_Resources}/jars/testng-6.8.jar" />
		<pathelement location="${Common_Resources}/jars/fabxslt.jar" />
		<pathelement location="${Common_Resources}/jars/java-client-4.1.2.jar" />
		<pathelement location="${Common_Resources}/jars/jsonschema2pojo-core-0.4.23.jar" />
		<pathelement location="${Common_Resources}/jars/ApiAutomation.jar" />
	</path>

	<path id="xslt.classpath">
		<pathelement location="build" />
		<pathelement location="${Common_Resources}/jars/saxon-9.1.0.8.jar" />
		<pathelement location="${Common_Resources}/jars/SaxonLiaison.jar" />
	</path>

	<target name="run">
		<echo message="Common Resources Path == ${Common_Resources}" />
		<antcall target="ClearScrap" />
		<record name="./finalReport/logs/logfile_${timestamp}.txt" action="start" append="false" />
		<antcall target="configSet" />
		<antcall target="build" />
		<antcall target="createConfigFile" />
		<antcall target="createTestNGXML" />
		<antcall target="finalReport" />
		<antcall target="backupPreProject" />
		<antcall target="clean" />
		<record name="./finalReport/logs/logfile_${timestamp}.txt" action="stop" />
	</target>


	<target name="init">
		<delete dir="${classes.dir}" />
		<mkdir dir="${classes.dir}" />
		<copy includeemptydirs="false" todir="${classes.dir}">
			<fileset dir="src">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<delete dir="${report.dir}" />
		<mkdir dir="${report.dir}" />
	</target>


	<target name="clean">
		<delete dir="${classes.dir}" />
		<!-- <delete dir="${report.dir}" /> -->
		<delete file="Config.properties" />
		<!--<delete file="testng.xml" /> -->
	</target>

	<target depends="build-project" name="build" />
	<target depends="init" name="build-project">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="${classes.dir}" includeantruntime="false" source="${source}" target="${target}" srcdir="src">
			<src path="src" />
			<classpath refid="fab.classpath" />
		</javac>
	</target>

	<target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects" />

	<!--Define <testng> task -->
	<taskdef resource="testngtasks" classpath="${Common_Resources}/jars/testng-6.8.jar"/>


	<!-- Take Backup for the present Project executed -->
	<target name="backupPreProject">
		<mkdir dir="../${ant.project.name}_Old_Reports/Execution_${timestamp}/finalReport" />
		<mkdir dir="../${ant.project.name}_Old_Reports/Execution_${timestamp}/TestDataSheets" />

		<copy todir="../${ant.project.name}_Old_Reports/Execution_${timestamp}/finalReport">
			<fileset dir="finalReport" includes="**" />
		</copy>

	</target>


	<!-- Delete Old Scrap Report Before Starting Execution -->
	<target name="ClearScrap">
		<mkdir dir="./finalReport" />
		<echo message="Delete Old Scrap Report Before Starting Execution" />
		<delete includeemptydirs="true">
			<fileset dir="finalReport" includes="**/*" />
		</delete>
		<mkdir dir="./finalReport/screenshots" />
		<mkdir dir="./finalReport/${logs.dir}" />
	</target>

	<target name="configSet">
		<touch file="Config.properties" />
		<echo message="-------------------------------- Path == config_${environment}.properties" />
		<copy overwrite="true" file="config_live.properties" tofile="config.properties" />
	</target>

	<target name="createConfigFile">
		<java classname="com.fabhotels.automationframework.core.CreateConfigFile" failonerror="true" fork="yes">
			<arg value="${environment}" />
			<arg value="${executiontype}" />
			<arg value="${drivertype}" />
			<classpath refid="fab.classpath" />
		</java>
	</target>


	<target name="createTestNGXML">
		<java classname="com.fabhotels.automationframework.core.CreateTestNGXML" failonerror="true" fork="yes">
			<classpath refid="fab.classpath" />
		</java>
	</target>

	<target name="ModifyXML" depends="runTests">
		<java classname="com.fabhotels.automationframework.core.ModifyNGXML" failonerror="true" fork="yes">
			<classpath refid="fab.classpath" />
		</java>
	</target>

	<target name="runTests">
		<taskdef resource="testngtasks" classpathref="fab.classpath" />
		<testng outputDir="${report.dir}" haltonfailure="false" classpathref="fab.classpath" configFailurePolicy="continue">
			<xmlfileset dir="${basedir}" includes="testng.xml" />
			<!--classfileset dir="${classes.dir}" includes="**/*.class" / -->
		</testng>
	</target>


	<target name="finalReport" depends="ModifyXML">
		<mkdir dir="finalReport" />

		<unzip src="${Common_Resources}/jars/fabxslt.jar" dest="${report.dir}">
			<patternset>
				<include name="**/*.xsl" />
			</patternset>
		</unzip>

		<xslt in="${report.dir}/testng-results.xml" style="${report.dir}/com/fabhotels/automationframework/xslt/testng-results.xsl" out="finalReport/index.html" processor="SaxonLiaison">
			<param name="testNgXslt.outputDir" expression="${basedir}/finalReport" />
			<param name="testNgXslt.environment" expression="${environment}" />
			<param name="testNgXslt.executiontype" expression="${executiontype}" />
			<param name="testNgXslt.drivertype" expression="${drivertype}" />
			<param expression="FAIL,SKIP,PASS,BY_CLASS,DESCRIPTION" name="testNgXslt.testDetailsFilter" />
			<param name="testNgXslt.showRuntimeTotals" expression="true" />
			<classpath refid="xslt.classpath" />
		</xslt>
	</target>

	<target name="openReport">
		<exec executable="${browser}" spawn="yes">
			<arg line="finalReport/index.html" />
		</exec>
	</target>

	<tstamp>
		<format property="timestamp" pattern="dd-MM-yyyy_HH-mm-ss" />
	</tstamp>


</project>